<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/ldap http://www.springframework.org/schema/ldap/spring-ldap-2.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
       default-autowire="byName">
    
    <import resource="classpath:META-INF/br.com.cds.connecta.framework.core.xml" />
    
    
    
    <context:component-scan base-package="br.com.cds.connecta.presenter" />
    
    
    
    <!-- FIXME Remover quando o banco novo do Presenter de desenvolvimento for criado! -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--<property name="jndiName" value="ConnectaPortalDS" />-->
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:mem:portalDB;INIT=create schema if not exists PRESENTER;MODE=Oracle;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"/>
        <property name="username" value="PRESENTER"/>
        <property name="password" value="PRESENTER"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="br.com.cds.connecta.presenter.entity" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.hbm2ddl.auto" value="create-drop" />
                <entry key="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
                <entry key="hibernate.archive.autodetection" value="class" />
                <entry key="hibernate.format_sql" value="true" />
                <entry key="hibernate.default_schema" value="PRESENTER"/>
            </map>
        </property>
    </bean>
    <!-- FIXME Retornar esse cÃ³digo quando o schema for criado! -->
    <!--    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="ConnectaPresenterPU" />
    </bean>-->
    
    
    
    
    <bean name="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" autowire="byName">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- MESSAGE SOURCES -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

<!--    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" />
    </bean>-->

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    
    <bean id="sharedTransactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="isolationLevelName" value="ISOLATION_READ_UNCOMMITTED" />
        <property name="timeout" value="30" />
    </bean>

<!--    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         one of the properties available; the maximum file size in bytes 
        <property name="maxUploadSize" value="100000000" />
    </bean>-->
    

    <!--
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="NESTED"/>
            <tx:method name="delete*" propagation="NESTED"/>
            <tx:method name="update*" propagation="NESTED"/>
            <tx:method name="get*" read-only="true" isolation="DEFAULT" propagation="SUPPORTS"/>
            <tx:method name="list*" read-only="true" isolation="DEFAULT" propagation="SUPPORTS"/>
            <tx:method name="*" propagation="NOT_SUPPORTED" isolation="DEFAULT" />
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:pointcut id="allServices" expression="execution(* br.com.cds.presenter.businnes.*.*.*(..))" />
        <aop:advisor pointcut-ref="allServices"   advice-ref="txAdvice" />
    </aop:config>
    -->

</beans>
