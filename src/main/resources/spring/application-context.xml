<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<import resource="classpath:META-INF/br.com.cds.connecta.framework.core.xml" />

	<context:component-scan base-package="br.com.cds.connecta.presenter" />

	<bean name="authFilterBean"
		class="br.com.cds.connecta.framework.core.security.AuthFilter">
		<property name="authService" ref="defaultAuthService" />
		<property name="exceptions">
			<list>
				<value>/binary</value>
				<value>/config</value>
				<value>/</value>
				<value>/analysisSocket/info</value>
			</list>
		</property>
	</bean>

	<!--PERSISTENCE -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="ConnectaPresenterPU" />
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="br.com.cds.connecta.presenter.entity" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.archive.autodetection">class,hbm</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<prop key="hibernate.c3p0.min_size">5</prop>
				<prop key="hibernate.c3p0.max_size">35</prop>
				<prop key="hibernate.c3p0.timeout">30000</prop>
				<prop key="hibernate.c3p0.max_statements">180</prop>
				<prop key="hibernate.c3p0.idle_test_period">30000</prop>
				<prop key="hibernate.search.default.directory_provider">
					org.hibernate.search.store.impl.RAMDirectoryProvider
				</prop>
				<prop key="hibernate.search.default.worker.backend">
					br.com.cds.connecta.framework.core.search.HibernateSearchSolrIndexer
				</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>ConnectaPresenterDS</value>
		</property>
	</bean>

	<!--TRANSACTION -->
	<import
		resource="classpath:META-INF/br.com.cds.connecta.framework.transaction.xml" />

	<!-- QUARTZ -->
	<bean name="complexJobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass"
			value="br.com.cds.connecta.presenter.quartz.RefreshAnalysisJob" />
		<property name="durability" value="true" />
	</bean>

	<!-- 10 minutes, every day -->
	<bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="complexJobDetail" />
        <property name="cronExpression" value="0 0/10 * 1/1 * ? *"/> <!-- 0/5 * * ? * * -->
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="complexJobDetail" />
			</list>
		</property>

		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
	</bean>

</beans>
